# Generated by Django 5.1.4 on 2025-01-16 14:51

import uuid

import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
import wagtail.models
import wagtail.models.media
import wagtail.models.specific
import wagtail.search.index
import wagtailtables.blocks
from django.conf import settings
from django.db import migrations, models

import cms.datavis.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("wagtailcore", "0094_alter_page_locale"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Visualisation",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ("uuid", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("title", models.CharField(blank=True, max_length=255)),
                ("subtitle", models.CharField(blank=True, max_length=255)),
                ("caption", wagtail.fields.RichTextField(blank=True, default="Source: Office for National Statistics")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "collection",
                    models.ForeignKey(
                        default=wagtail.models.media.get_root_collection_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="wagtailcore.collection",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="charts",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        related_name="created_visualisations",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                wagtail.models.PreviewableMixin,
                wagtail.models.specific.SpecificMixin,
                wagtail.search.index.Indexed,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="DataSource",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("uuid", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                (
                    "table",
                    wagtail.fields.StreamField(
                        [("table", 2)],
                        blank=True,
                        block_lookup={
                            0: ("wagtail.blocks.TextBlock", (), {"default": "[]", "label": "Data"}),
                            1: ("wagtail.blocks.ChoiceBlock", [], {"choices": wagtailtables.blocks.get_choices}),
                            2: (
                                "wagtail.blocks.StructBlock",
                                [[("table_data", 0), ("table_type", 1)]],
                                {"label": "Table"},
                            ),
                        },
                        null=True,
                    ),
                ),
                ("data", models.JSONField(editable=False, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "collection",
                    models.ForeignKey(
                        default=wagtail.models.media.get_root_collection_id,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="wagtailcore.collection",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        related_name="created_data_sources",
                    ),
                ),
            ],
            options={
                "verbose_name": "data source",
                "verbose_name_plural": "data sources",
            },
            bases=(wagtail.models.PreviewableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Chart",
            fields=[
                (
                    "visualisation_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="datavis.visualisation",
                    ),
                ),
                ("show_legend", models.BooleanField(default=False)),
                ("legend_position", models.CharField(default="top", max_length=6)),
                ("show_value_labels", models.BooleanField(default=False)),
                ("theme", models.CharField(default="primary", max_length=10)),
                ("use_stacked_layout", models.BooleanField(default=False)),
                ("x_label", models.CharField(blank=True, max_length=255)),
                ("x_max", models.FloatField(blank=True, null=True)),
                ("x_min", models.FloatField(blank=True, null=True)),
                ("x_reversed", models.BooleanField(default=False)),
                ("x_tick_interval", models.FloatField(blank=True, null=True)),
                ("y_label", models.CharField(blank=True, max_length=255)),
                ("y_max", models.FloatField(blank=True, null=True)),
                ("y_min", models.FloatField(blank=True, null=True)),
                ("y_value_suffix", cms.datavis.fields.NonStrippingCharField(blank=True, max_length=30)),
                ("y_tooltip_suffix", cms.datavis.fields.NonStrippingCharField(blank=True, max_length=30)),
                ("y_reversed", models.BooleanField(default=False)),
                ("y_tick_interval", models.FloatField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("datavis.visualisation",),
        ),
        migrations.CreateModel(
            name="Annotation",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ("sort_order", models.IntegerField(blank=True, editable=False, null=True)),
                ("label", models.CharField(max_length=100)),
                ("x", models.CharField(max_length=50)),
                ("y", models.CharField(max_length=50)),
                (
                    "visualisation",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annotations",
                        to="datavis.visualisation",
                    ),
                ),
            ],
            options={
                "verbose_name": "annotation",
                "verbose_name_plural": "annotations",
            },
        ),
        migrations.AddField(
            model_name="visualisation",
            name="primary_data_source",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="datavis.datasource"),
        ),
        migrations.CreateModel(
            name="AdditionalDataSource",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ("sort_order", models.IntegerField(blank=True, editable=False, null=True)),
                ("display_as", models.CharField(default="line", max_length=15)),
                ("marker_style", models.CharField(blank=True, default="", max_length=15)),
                ("is_downloadable", models.BooleanField(default=False)),
                (
                    "visualisation",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="additional_data_sources",
                        to="datavis.visualisation",
                    ),
                ),
                (
                    "data_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="+", to="datavis.datasource"
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AreaChart",
            fields=[],
            options={
                "verbose_name": "area chart",
                "verbose_name_plural": "area charts",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("datavis.chart",),
        ),
        migrations.CreateModel(
            name="BarChart",
            fields=[],
            options={
                "verbose_name": "bar chart",
                "verbose_name_plural": "bar charts",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("datavis.chart",),
        ),
        migrations.CreateModel(
            name="ColumnChart",
            fields=[],
            options={
                "verbose_name": "column chart",
                "verbose_name_plural": "column charts",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("datavis.chart",),
        ),
        migrations.CreateModel(
            name="LineChart",
            fields=[],
            options={
                "verbose_name": "line chart",
                "verbose_name_plural": "line charts",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("datavis.chart",),
        ),
    ]
