---
services:
  db:
    image: postgres:16
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      # Defaults for createdb/dropdb/pg_restore etc.
      PGDATABASE: ons
      PGUSER: ons
      # Values for initdb
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: ons
      REDIS_URL: redis://redis:6379
    volumes:
      - pgdata:/var/lib/postgresql/data
    attach: false
    ports:
      - 5432:5432

  redis:
    image: redis:7.2
    attach: false
    ports:
      - 6379:6379

  broker:
    image: bitnami/kafka:3.5.1
    container_name: broker
    environment:
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_ENABLE_KRAFT: 'yes'

      # The node has both roles
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_NODE_ID: '1'

      # Listeners
      KAFKA_CFG_LISTENERS: 'INSIDE_DOCKER://0.0.0.0:9092,OUTSIDE_DOCKER://0.0.0.0:19092,CONTROLLER://0.0.0.0:9093'

      # Advertise the broker listeners only (not controller)
      KAFKA_CFG_ADVERTISED_LISTENERS: 'INSIDE_DOCKER://broker:9092,OUTSIDE_DOCKER://localhost:19092'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'INSIDE_DOCKER:PLAINTEXT,OUTSIDE_DOCKER:PLAINTEXT,CONTROLLER:PLAINTEXT'

      # Inter-broker traffic uses the "INSIDE_DOCKER" listener
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: 'INSIDE_DOCKER'

      # KRaft controller config
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@broker:9093'

      # Single-node broker settings
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
      KAFKA_CFG_NUM_PARTITIONS: '3'
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'

    ports:
      - '9092:9092' # Inside-docker
      - '19092:19092' # Outside-docker
      - '9093:9093' # Controller

volumes:
  pgdata:
